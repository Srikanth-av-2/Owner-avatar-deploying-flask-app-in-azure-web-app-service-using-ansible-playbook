---
- name: Deploy Dockerized Flask App to Azure Web App for Containers
  hosts: localhost
  connection: local
  vars:
    resource_group: "myResourceGroup"
    acr_name: "myacrname7981153085"
    location: "eastus"
    app_service_plan: "myAppServicePlan"
    web_app_name: "my-flask-webapp-7981153085"
    image_name: "flask_app"
    image_tag: "latest"

  tasks:
    - name: Create Azure Resource Group
      command: az group create --name {{ resource_group }} --location {{ location }}

    - name: Create Azure Container Registry (ACR)
      command: >
        az acr create --resource-group {{ resource_group }} 
                      --name {{ acr_name }} 
                      --sku Basic 
                      --admin-enabled true

    - name: Login to ACR
      command: az acr login --name {{ acr_name }}

    - name: Get ACR login server
      command: az acr show --name {{ acr_name }} --query loginServer --output tsv
      register: acr_login_server

    - name: Tag Docker image for ACR
      command: docker tag {{ image_name }}:{{ image_tag }} {{ acr_login_server.stdout }}/{{ image_name }}:{{ image_tag }}

    - name: Push Docker image to ACR
      command: docker push {{ acr_login_server.stdout }}/{{ image_name }}:{{ image_tag }}

    - name: Create App Service Plan (Linux)
      command: >
        az appservice plan create 
        --name {{ app_service_plan }} 
        --resource-group {{ resource_group }} 
        --sku B1 
        --is-linux 
        --location "Central US"

    - name: Create Azure Web App for Containers
      command: >
        az webapp create 
        --resource-group {{ resource_group }} 
        --plan {{ app_service_plan }} 
        --name {{ web_app_name }} 
        --deployment-container-image-name {{ acr_login_server.stdout }}/{{ image_name }}:{{ image_tag }}

    - name: Get ACR username
      command: az acr credential show --name {{ acr_name }} --query username --output tsv
      register: acr_username

    - name: Get ACR password
      command: az acr credential show --name {{ acr_name }} --query "passwords[0].value" --output tsv
      register: acr_password

    - name: Configure Web App to use ACR image
      command: >
        az webapp config container set 
        --name {{ web_app_name }} 
        --resource-group {{ resource_group }} 
        --docker-custom-image-name {{ acr_login_server.stdout }}/{{ image_name }}:{{ image_tag }} 
        --docker-registry-server-url https://{{ acr_login_server.stdout }} 
        --docker-registry-server-user {{ acr_username.stdout }} 
        --docker-registry-server-password {{ acr_password.stdout }}

    - name: Output Web App URL
      debug:
        msg: "https://{{ web_app_name }}.azurewebsites.net"
